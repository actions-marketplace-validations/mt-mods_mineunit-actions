name: Mineunit runner
description: "Execute unit tests with mineunit & busted"
author: SX / S-S-X
branding:
  icon: file-text
  color: green

inputs:
  working-directory:
    description: "Working directory for unit tests"
    required: true
    default: "."
  luacov-exclude:
    description: "Code coverage exclude patterns"
    required: false
  badge-name:
    description: "Code coverage badge name"
    required: true
    default: "coverage"
  badge-label:
    description: "Code coverage badge label"
    required: true
    default: "Test coverage"
  badge-color:
    description: "Code coverage badge color"
    required: true
    default: "99CC09"
  mineunit-version:
    description: "Mineunit version"
    required: false
  mineunit-directory:
    description: "Mineunit install directory relative to working-directory"
    required: true
    default: "spec/mineunit"

outputs:
  # Generated or supplied badge properties
  badge-name:
    description: "Code coverage badge name waiting for issues/#1"
    value: ${{ steps.badge-wrapper-actions-issue-1.outputs.badge-name }}
  badge-label:
    description: "Code coverage badge label waiting for issues/#1"
    value: ${{ steps.badge-wrapper-actions-issue-1.outputs.badge-label }}
  badge-status:
    description: "Code coverage badge status waiting for issues/#1"
    value: ${{ steps.badge-wrapper-actions-issue-1.outputs.badge-status }}
  badge-color:
    description: "Code coverage badge color waiting for issues/#1"
    value: ${{ steps.badge-wrapper-actions-issue-1.outputs.badge-color }}

  # Busted test framework output
  busted-stdout:
    description: "Stdout produced during busted run"
    value: ${{ steps.busted-run.outputs.busted-stdout }}
  busted-spec-missing:
    description: "Set to true if no spec files found"
    value: ${{ steps.busted-run.outputs.busted-spec-missing }}

  # Help content / on demand documentation
  help-busted-spec-missing:
    description: "Help for situation where spec files could not be loaded"
    value: |
      #### It seems your project is missing spec files, you should add some spec files to spec directory.
      If you already have spec directory with `*_spec.lua` files then problem is probably `working-directory` settings.
      `working-directory` should point to directory where `spec` directory is located.
      
      Example when you have tests in `/src/mystuff/spec` directory:
      ```
      - uses: mt-mods/mineunit-actions@master
        with:
          working-directory: ./src/mystuff
      ```

runs:
  using: composite
  steps:
    - name: busted install
      shell: bash
      run: |
        sudo apt-get install -y luarocks > /dev/null
        luarocks install --local busted > /dev/null
        luarocks install --local cluacov > /dev/null
    - name: mineunit install
      shell: bash
      run: |
        luarocks install --server=https://luarocks.org/dev  --local mineunit ${{ inputs.mineunit-version }}
    - name: luacov configuration
      working-directory: "${{ inputs.working-directory }}"
      shell: bash
      run: |
        excludes='${{ inputs.luacov-exclude && format('"{0}"',join(fromJSON(inputs.luacov-exclude),'","')) || '' }}'
        echo 'deletestats=true;includeuntestedfiles=true;exclude={"spec/","/\.?luarocks/","/share/lua/",'"${excludes}"'}'>.luacov
    - id: busted-run
      name: busted run
      working-directory: "${{ inputs.working-directory }}"
      shell: bash
      run: |
        set +eo pipefail
        exec 3>&1
        OUT="$($HOME/.luarocks/bin/busted -c | tee >(cat - >&3); exit ${PIPESTATUS[0]})"
        ERR=$?
        exec 3>&-
        grep_eronly=(grep '0 successes / 0 failures / [1-9] error.\? / 0 pending')
        grep_nospec=(grep 'No test files found')
        ("${grep_eronly[@]}"<<<"$OUT" && "${grep_nospec[@]}"<<<"$OUT")&>/dev/null && echo "::set-output name=busted-spec-missing::true"
        OUT="${OUT//'%'/'%25'}";OUT="${OUT//$'\n'/'%0A'}"
        echo "::set-output name=busted-stdout::${OUT//$'\r'/'%0D'}"
        exit $ERR
    - name: luacov run
      working-directory: "${{ inputs.working-directory }}"
      shell: bash
      run: $HOME/.luarocks/bin/luacov
    - name: collect coverage data
      working-directory: "${{ inputs.working-directory }}"
      shell: bash
      run: |
        (printf coverage=>>$GITHUB_ENV;tail -n 2 luacov.report.out | grep ^Total | grep -o '[0-9.]\+%$'>>$GITHUB_ENV)
        (awk -v p=0 '/^----/{p++;next}p==2{exit}p' luacov.report.out | sort -hrk4 > luacov.report.sum)
        (echo "files=$(grep -cv '\s0\.00%' luacov.report.sum)/$(wc -l<luacov.report.sum)">>$GITHUB_ENV)
    - id: badge-wrapper-actions-issue-1
      name: Input wrapper while waiting for actions in actions feature
      shell: bash
      run: |
        echo "::set-output name=badge-name::${{ inputs.badge-name }}"
        echo "::set-output name=badge-label::${{ inputs.badge-label }}"
        echo "::set-output name=badge-status::${{ env.coverage }} in ${{ env.files }} files"
        echo "::set-output name=badge-color::${{ inputs.badge-color }}"
